{"version":3,"file":"static/js/823.d6dcd694.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/@solana/buffer-layout/node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/regenerator/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetParsedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    return res.result;\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n      return ContinueSentinel;\n    }\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","base64","require","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","lengths","assert","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","u32","self","crypto","Uint32Array","createView","DataView","rotr","padStart","toBytes","TextEncoder","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","tmp","SHA2","padOffset","isLE","view","take","process","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","forEach","digestInto","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","_0n","_1n","_2n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","affinePoint","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","Signature","assertValidity","u8","fromHex","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","isNaN","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sha256","toFailures","run","StructError","failure","failures","rest","path","join","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","next","done","toFailure","context","struct","branch","refinement","options","coerce","ctx","coercer","schema","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","keccak","finish","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","oHash","getPrototypeOf","hmac","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","decodeLength","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","confirmTransaction","status","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetParsedBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","module","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","move","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","_context","createRequestAccountsMiddleware","_ref3","requestAccounts","_context2","createGenericJRPCMiddleware","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_inherits","_classCallCheck","_super","chainConfig","chainNamespace","CHAIN_NAMESPACES","_createClass","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_context5","_context6","display","sigData","_req$params","_req$params2","_context7","_context8","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","allTxns","unsignedTx","_yield$injectedProvid5","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_context4","_this","configure","_objectSpread","setupProvider","_getProviderHandlers","keyPairGenerator","_context9","keyPair","signedMsg","nacl","_providerEngineProxy","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_this2","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","send","promise","_login","mark","_callee","resp","wrap","sent","abrupt","stop","_listMethods","_callee2","_this3","_subscribe","_callee3","event","_x2","_unsubscribe","_callee4","_x3","_this4","addEventListener","listeners","_ref2","reason","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","ReferenceError","asyncGeneratorStep","_throw","Constructor","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","__proto__","subClass","superClass","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","awrap","async","iter","object","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","_setPrototypeOf","runtime","regeneratorRuntime","accidentalStrictMode","Function","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}